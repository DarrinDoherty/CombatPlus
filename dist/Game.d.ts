export declare class Game {
    private canvas;
    private ctx;
    private config;
    private soundEngine;
    private tanks;
    private player;
    private bullets;
    private explosions;
    private freezeGrenades;
    private pickupGrenades;
    private pressedKeys;
    private pendingManualGrenades;
    private gameRunning;
    private player1Score;
    private player2Score;
    private playerLives;
    private gameOver;
    private injuredSoldier;
    private carriedSoldier;
    private missionComplete;
    private rescuesCompleted;
    private baseFreezeTime;
    private screenShake;
    private screenShakeDecay;
    private channelWidth;
    private channelLeft;
    private channelRight;
    private lastSpawnTime;
    private spawnInterval;
    private lastLeftSpawnTime;
    private lastRightSpawnTime;
    private celebrationStartTime;
    private celebrationDuration;
    private mourningStartTime;
    private mourningDuration;
    private currentSoldierProfile;
    private lastSoldierProfile;
    private animationFrameId;
    private lastPickupGrenadeSpawnTime;
    private pickupGrenadeSpawnInterval;
    private minPickupGrenadeInterval;
    private maxPickupGrenadeInterval;
    private freezeZoneEffects;
    constructor(canvas: HTMLCanvasElement);
    private stopAllWhistles;
    private loadRecordedAudio;
    private initializeTanks;
    private spawnNewTank;
    private checkAndSpawnForSide;
    private spawnTankOnSide;
    private getSpawnTimeForSide;
    private wrapText;
    private getRandomSpawnInterval;
    private getTanksByTeam;
    private getEnemyTanks;
    private isPositionOccupied;
    private initializePlayer;
    private initializeInjuredSoldier;
    start(): void;
    pause(): void;
    restart(): void;
    private updateAI;
    private handleTankCollisions;
    private handleCollisions;
    private handleExplosiveDamage;
    private gameLoop;
    private update;
    private updateFreezeGrenades;
    private freezeAllTanksInRange;
    private addFreezeZoneEffect;
    private updateFreezeZoneEffects;
    private renderFreezeZoneEffects;
    private renderCarriedSoldierHealthMeter;
    throwFreezeGrenade(direction?: {
        x: number;
        y: number;
    }): void;
    private handleGrenadeKey;
    private getDirectionName;
    private updatePickupGrenades;
    private spawnPickupGrenades;
    private render;
    private updateScore;
    private setupEventListeners;
}
